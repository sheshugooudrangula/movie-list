{"ast":null,"code":"var _jsxFileName = \"/Users/sheshu/Documents/movie-list/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [loginData, setLoginData] = useState({\n    name: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({}); // State for storing validation errors\n\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const newErrors = {};\n    if (!loginData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n    if (!loginData.password) {\n      newErrors.password = 'Password is required';\n    }\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return; // Prevent login if there are validation errors\n    }\n\n    if (userData && userData.name === loginData.name && userData.password === loginData.password) {\n      navigate('/Dashboard');\n    } else {\n      alert('Invalid Credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"row\",\n          children: \"Name:   \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"name\",\n          id: \"name\",\n          name: \"name\",\n          value: loginData.name,\n          onChange: e => setLoginData({\n            ...loginData,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"row\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: loginData.password,\n          onChange: e => setLoginData({\n            ...loginData,\n            password: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => navigate('/signup'),\n        children: \"Don't have an account? Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"e6jiMrewHkxMudFCxtqSLOQ33rc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","loginData","setLoginData","name","password","errors","setErrors","navigate","handleLogin","e","preventDefault","userData","JSON","parse","localStorage","getItem","newErrors","trim","Object","keys","length","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/sheshu/Documents/movie-list/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./Style.css\";\n\nfunction Login() {\n  const [loginData, setLoginData] = useState({\n    name: '',\n    password: '',\n  });\n\n  const [errors, setErrors] = useState({}); // State for storing validation errors\n\n  const navigate = useNavigate();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    const newErrors = {};\n\n    if (!loginData.name.trim()) {\n      newErrors.name = 'Name is required';\n    }\n\n    if (!loginData.password) {\n      newErrors.password = 'Password is required';\n    }\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return; // Prevent login if there are validation errors\n    }\n\n    if (\n      userData &&\n      userData.name === loginData.name &&\n      userData.password === loginData.password\n    ) {\n      navigate('/Dashboard');\n    } else {\n      alert('Invalid Credentials');\n    }\n  };\n  return (\n    <div className='card'>\n      <h2>User Login</h2>\n      <form onSubmit={handleLogin}>\n      <div>\n          <label className='row'>Name:   </label>\n          <input\n            type=\"text\"\n            className='name'\n            id=\"name\"\n            name=\"name\"\n            value={loginData.name}\n            onChange={(e) => setLoginData({ ...loginData, name: e.target.value })}\n            required\n          />\n        </div>\n        <div>\n          <label className='row'>Password:</label>\n          <input\n            type=\"password\"\n            className='password'\n            id=\"password\"\n            name=\"password\"\n            value={loginData.password}\n            onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\n            required\n          />\n        </div>\n        <button type=\"submit\">Log In</button>\n        {errors.password && <span className=\"error\">{errors.password}</span>}\n\n        <h3 onClick={() => navigate('/signup')}>Don't have an account? Sign Up</h3>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}