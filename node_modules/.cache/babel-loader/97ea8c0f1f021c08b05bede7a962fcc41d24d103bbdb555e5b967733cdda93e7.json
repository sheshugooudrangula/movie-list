{"ast":null,"code":"import _toConsumableArray from\"/Users/sheshu/Documents/movie-list/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/sheshu/Documents/movie-list/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faEnvelope,faArrowUp}from'@fortawesome/free-solid-svg-icons';import\"./Dashboard.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieData=_useState2[0],setMovieData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){fetch('https://hoblist.com/api/movieList',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({category:'movies',language:'kannada',genre:'all',sort:'voting'})}).then(function(response){console.log('Response status:',response.status);if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(function(data){console.log('Data:',data);setMovieData(data.result);setLoading(false);}).catch(function(error){console.error('Error:',error);setError(error);setLoading(false);});},[]);var handleUpvoted=function handleUpvoted(movieIndex){var updateMovieData=_toConsumableArray(movieData);updateMovieData[movieIndex].totalVoted++;setMovieData(updateMovieData);fetch('https://hoblist.com/api/movieList',{method:'POST',body:JSON.stringify({movieId:updateMovieData[movieIndex].id}),headers:{'Content-Type':'application/json'}});};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error.message]});}return/*#__PURE__*/_jsx(\"div\",{className:\"outer-dash-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inner-dash-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Movie Dashboard\"}),/*#__PURE__*/_jsx(\"ul\",{children:movieData.map(function(movie,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"parent\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"icon\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowUp,className:\"up\",onClick:function onClick(){return handleUpvoted(index);}}),/*#__PURE__*/_jsx(\"span\",{className:\"vote\",children:movie.totalVoted}),/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowUp,rotation:180,className:\"down\"}),\"         \"]}),/*#__PURE__*/_jsx(\"img\",{src:movie.poster,className:\"card-image\",alt:movie.title}),/*#__PURE__*/_jsx(\"div\",{className:\"child\",children:/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:movie.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-item\",children:[\"Genre:\",movie.genre]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-item\",children:[\"Director:\",movie.director]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-item\",children:[\"starring:\",movie.stars]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-time\",children:[movie.runTime,\"Mins | \",movie.language,\" | \",movie.releasedDate]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-view\",children:[movie.pageViews,\"views | \",movie.language,\" | voted by \",movie.totalVoted,\" people\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\" Watch tariler\"})]},index)})]})});})}),/*#__PURE__*/_jsx(\"button\",{className:\"dashboard-button\",children:\"Load More\"})]})});}export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faEnvelope","faArrowUp","jsx","_jsx","jsxs","_jsxs","Dashboard","_useState","_useState2","_slicedToArray","movieData","setMovieData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","fetch","method","headers","body","JSON","stringify","category","language","genre","sort","then","response","console","log","status","ok","Error","json","data","result","catch","handleUpvoted","movieIndex","updateMovieData","_toConsumableArray","totalVoted","movieId","id","children","message","className","map","movie","index","icon","onClick","rotation","src","poster","alt","title","director","stars","runTime","releasedDate","pageViews","type"],"sources":["/Users/sheshu/Documents/movie-list/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelope,faArrowUp } from '@fortawesome/free-solid-svg-icons'\n\nimport \"./Dashboard.css\";\n\nfunction Dashboard() {\n  const [movieData, setMovieData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n\n    fetch('https://hoblist.com/api/movieList', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          category: 'movies',\n          language: 'kannada',\n          genre: 'all',\n          sort: 'voting',\n        }),\n      })\n        .then((response) => {\n          console.log('Response status:', response.status); \n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then((data) => {\n          console.log('Data:', data); \n          setMovieData(data.result);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error('Error:', error); \n          setError(error);\n          setLoading(false);\n        });\n    },[]);\n\n    const handleUpvoted = (movieIndex)=>{\n\n      const updateMovieData = [...movieData]\n      updateMovieData[movieIndex].totalVoted++;\n      setMovieData(updateMovieData);\n\n      fetch('https://hoblist.com/api/movieList',{\n        method: 'POST' ,\n        body: JSON.stringify({movieId:updateMovieData[movieIndex].id}),\n        headers:{\n          'Content-Type' : 'application/json'\n        },\n      });\n    };\n   \n    \n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div className='outer-dash-box'>\n      <div className='inner-dash-box'>\n  \n    <h2>Movie Dashboard</h2>\n    <ul>\n      {movieData.map((movie, index) => (\n        <div>\n            <div className='parent'>\n            <div className='icon'>\n            <FontAwesomeIcon icon={faArrowUp} className='up'onClick={()=>handleUpvoted(index)} /> \n            <span className='vote'>{movie.totalVoted}</span>\n            <FontAwesomeIcon icon={faArrowUp} rotation={180} className='down'  />         </div>\n            <img src={movie.poster} className='card-image' alt={movie.title} />\n                <div className='child'>\n                <li key={index} >\n            <h2 className='card-title'>{movie.title}</h2>\n          <p className='card-item'>Genre:{movie.genre}</p>\n          <p className='card-item'>Director:{movie.director}</p>\n          <p className='card-item'>starring:{movie.stars}</p>\n          <p className='card-time'>{movie.runTime}Mins | {movie.language} | {movie.releasedDate}</p>\n          <p className='card-view'>{movie.pageViews}views | {movie.language} | voted by {movie.totalVoted} people</p>\n          <button type='submit'> Watch tariler</button>\n         \n        </li>\n                </div>\n            </div>\n        </div>\n      ))}\n    </ul>\n    <button className=\"dashboard-button\">Load More</button>\n  </div>\n  </div>\n  \n);\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}